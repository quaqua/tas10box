.container-padding.user-container
  %a.tas10-button.float-right{ :href => edit_group_path(@group), :"data-remote" => true }
    =t('edit')

  %img.userpic.float-left.x_100{ :src => "/assets/group_100x100.png" }

  .next-to-picture
    %h1
      = @group.name

    %p
      %label.desc
        =t('group.users')

    %ul{:class => "group-#{@group.id}-users groups-users"}
      - @group.users.each do |user|
        %li{ :class => "user-#{user.id}-in-group-#{@group.id}" }
          = link_to( user.fullname_or_name, user )
          = link_to( raw("<span class=\"ui-icon float-right ui-icon-close\"></span>"), "#{remove_user_from_group_path(@group)}?user_id=#{user.id}", :remote => true, :method => :delete, :confirm => t('user.remove_from_group', :name => user.fullname_or_name) )

    %p
      %label.desc
        = t('user.add_to_group')

    =form_tag add_user_to_group_path, :class => "users-for-group-form", :style => "margin-left: 12px; display:block;position:relative" do
      %a.live-tipsy.close-button{ :href => "#", :onclick => "$(this).closest('form').remove();", :"original-title" => t('close') }
        %span.ui-icon.ui-icon-close
      %a.live-tipsy.create-button{ :href => "#", :"original-title" => t('user.invite') }
        %span.ui-icon.ui-icon-disk
      %select.add-user-combobox{ :name => "user_id" }
      %input{ :type => "hidden", :name => "email" }

  :javascript
    setTimeout(function(){
      $('#tab_content__#{@group.id} .add-user-combobox').tas10Combobox({ 
        submitOnSelect: true,
        url: '/users/' + $('#account-info').data('id') + '/known',
        emptyDataCallback: function(select, val){
          var validEmail = /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
          if( validEmail.test( val) ){
            $(select).closest('.tas10-acl-form').find('.create-button').show();
            var form = $(select).closest('.tas10-acl-form');
            $(form).find('input[name=email]').val( $(form).find('.ui-autocomplete-input').val() );
            console.log('setting data', (form).find('.ui-autocomplete-input').val())
          }
        },
        hasDataCallback: function(select){
          $(select).closest('.tas10-acl-form').find('.create-button').show();
        }
      });

      $('.tas10-acl-form .create-button').live('click', function(){
        var form = $(this).closest('form')
        $(form).submit();
      });
      setTimeout( function(){
        $('#tab_content__#{@group.id} .ui-autocomplete-input').css({ width: '195px'});
        $('#tab_content__#{@group.id} .ui-icon-close').css({ marginTop: '0'});
        $('#tab_content__#{@group.id} .ui-icon-disk').hide();
      },50)
    }, 500);