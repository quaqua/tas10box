.browser-actions-bg
  .item-actions.ui-helper-clearfix
    %span.spacer  
    -if defined?(show_checkbox)
      %a.multi.single.default.select-all.live-tipsy{ :"original-title" => t( 'select_all' )}
        %span.tas10-icon16.tas10-icon-checkbox
    -if defined?(add_item)
      %a.add-table-item.live-tipsy{ :"original-title" => t( 'add' )}
        %span.tas10-icon16.tas10-icon-plus
    %a.default.delete-table-items.live-tipsy{ :href => "#", :"original-title" => t( 'delete' ) }
      %span.tas10-icon16.tas10-icon-trash
    -if defined?(copy)
      %a.default.label-table-items.live-tipsy{ :href => "#", :"original-title" => t( 'copy' ) }
        %span.tas10-icon16.tas10-icon-copy
    %a.default.refresh-table.live-tipsy{ :href => "#", :"original-title" => t( 'refresh' ) }
      %span.tas10-icon16.tas10-icon-refresh
    -if defined?(combo)
      %a.default.toggle-list-detail.live-tipsy{ :href => "#", :"original-title" => t( 'list_detail_combo' ) }
        %span.tas10-icon16.tas10-icon-list-detail-combo
    -if defined?(klass)
      .btn-group.float-left
        %button.btn.btn-mini
          =t('settings')
        %button.btn.btn-mini.dropdown-toggle{ :"data-toggle" => "dropdown" }
          %span.caret
        .dropdown-menu
          -columns = ( (@doc && @doc.respond_to?(:columns) && @doc.columns && @doc.columns.size > 0) ? @doc.columns : klass.default_columns)
          =form_for (@doc ? @doc : QueryScript.new), :remote => true, :html => { :class => (@doc ? nil : "queryscript-columns-form")} do |f|
            %p{:style => "text-align:right"}
              %input.btn.btn-mini.btn-inverse{:type => "submit", :value => t( (@doc && @doc.respond_to?(:columns) && @doc.columns && @doc.columns.size > 0 ) ? 'save' : 'create' ) }
            -unless @doc
              %p
                =f.text_field :name, :placeholder => t('name')
                =f.hidden_field :doc_type, :value => ( params[:types] ? params[:types].split(',').first : klass.name )
                =f.hidden_field :query, :value => @uri
            %ul.table-column-list
              =f.fields_for :columns do |c|
                -columns.each do |col|
                  -column = (col.is_a?(String) ? eval(col) : col)
                  -column = HashWithIndifferentAccess.new(column)
                  //-next if column["name"].downcase.match(/id|details/)
                  %li.col-item{ :style => (column["name"].downcase.match(/id|details/) ? "display:none" : nil), :"data-col-name" => column["name"], "class" => (column["hidden"] ? nil : "col-visible") }
                    =c.hidden_field :content, :name => "#{c.object_name}[]", :class => "span6", :value => column
                    %span.show-hide-column.tas10-checkbox.tas10-icon16.tas10-icon-checkbox.pull-left{ :class => (column["hidden"] ? nil : "checked" )}
                    %span.icon-resize-vertical.pull-right
                    %strong=t("#{klass.name.underscore.pluralize}.#{column["name"]}")


    -if defined?(doc_actions)
      %a.live-tipsy.float-right{ :"original-title" => t( 'delete' ), :"data-method" => "delete", :"data-remote" => true, :href => "documents/#{doc.id}" }
        %span.tas10-icon16.tas10-icon-trash
      %a.live-tipsy.float-right{ :"original-title" => t( 'edit' ), :"data-remote" => true, :href => "documents/#{doc.id}/edit" }
        %span.tas10-icon16.tas10-icon-pencil
      %a.live-tipsy.float-right{ :"original-title" => t( 'details' ), :"data-remote" => true, :href => "documents/#{doc.id}/info" }
        %span.tas10-icon16.tas10-icon-details
    -if defined?(new_contact)
      %span.spacer
      %a.float-right{ :href => "/contacts/new#{"?label_ids=#{@doc.id}" if @doc}", :"data-remote" => true}
        %span.tas10-icon16.tas10-icon-new.float-left{:style => "margin-right: 5px"}
        #{t('contacts.new')}
    -if defined?(new_invoice)
      %span.spacer
      %a.float-right{ :href => "/invoices/new#{"?label_ids=#{@doc.id}" if @doc}", :"data-remote" => true}
        %span.tas10-icon16.tas10-icon-new.float-left{:style => "margin-right: 5px"}
        #{t('invoices.new')}
